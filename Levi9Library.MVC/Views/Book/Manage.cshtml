@using System.Web.Mvc.Html
@using Levi9Library.MVC.Models
@using PagedList.Mvc
@model ManageViewModel
@{
	Layout = "~/Views/Shared/_Layout.cshtml";
	ViewBag.Title = "Admin Home";
}

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

<h3>Book Inventory</h3>

<input id="addBookButton" type="button" class="btn btn-default float-right" value="Add book" onclick="location.href='@Url.Action("Create", "Book")'" />

@if (TempData["Deleted"] != null)
{
	<div class="alert alert-success alert-dismissable">
		<a href="#" class="close" data-dismiss="alert" aria-label="close">×</a>
		@TempData["Deleted"]
	</div>
}

@if (TempData["Readded"] != null)
{
	<div class="alert alert-success alert-dismissable">
		<a href="#" class="close" data-dismiss="alert" aria-label="close">×</a>
		@TempData["Readded"]
	</div>
}

@if (String.IsNullOrEmpty(ViewBag.CurrentFilter) && Model.Inventory.Count == 0)
{
	<p>The current inventory is empty.</p>
}

@using (Html.BeginForm("Manage", "Book", FormMethod.Get, new { @class = "manage-form"}))
{
	<div id="oldInventorySlider">
		<p>Show archived entries?</p>
		<div class="slider">
			@Html.CheckBoxFor(m => m.OldInventoryIsShown)
			@Html.LabelFor(m => m.OldInventoryIsShown, new { @class = "toggle-label" })
		</div>
	</div>

	if (Model.OldInventoryIsShown && String.IsNullOrEmpty(ViewBag.CurrentFilter) && Model.Inventory.Count == 0)
	{
		<p>There are no archived inventory entries.</p>
	}

	if (Model.Inventory.Count > 0 || (!String.IsNullOrEmpty(ViewBag.CurrentFilter) && Model.Inventory.Count == 0))
	{
		<div id="searchBar" class="input-group">
			@Html.TextBoxFor(m => m.SearchString, ViewBag.CurrentFilter as string, new { @class = "form-control", type = "search", placeholder = "Search by Author or Title" })
			<span class="input-group-btn">
				<button class="btn btn-default" type="submit">
					<span class="glyphicon glyphicon-search"></span>
				</button>
			</span>
		</div>
	}
}

@if (Model.Inventory.Count > 0)
{
	<table id="bookInventory" class="table table-hover">
		<thead>
			<tr>
				<th>Author</th>
				<th>Title</th>
				<th class="medium-screen">Book Score</th>
				<th class="medium-screen">Stock</th>
				<th>@*Actions*@</th>
			</tr>
		</thead>

		@foreach (var entry in Model.Inventory)
				{
			<tr>
				<td>@Html.DisplayFor(modelItem => entry.Author)</td>
				<td>@Html.DisplayFor(modelItem => entry.Title)</td>
				<td class="medium-screen">@Html.DisplayFor(modelItem => entry.BookScore)</td>
				<td class="medium-screen">@Html.DisplayFor(modelItem => entry.Stock)</td>
				@if (entry.IsDisabled)
				{
					<td data-toggle="tooltip"
						title="This book was previously removed from the inventory. To edit it, you must first readd it.">
						@Html.ActionLink("Readd", "Enable", new { bookId = entry.BookId })
					</td>
				}
				else
				{
					<td class="manage-links">
						@Html.ActionLink("Details", "Details", new { bookId = entry.BookId })
						@Html.ActionLink("Edit", "Edit", new { bookId = entry.BookId })
						@Html.ActionLink("Delete", "Delete", new { bookId = entry.BookId })
					</td>
				}
			</tr>
				}
	</table>
	<br />

			<p>Page @(Model.Inventory.PageCount < Model.Inventory.PageNumber ? 0 : Model.Inventory.PageNumber) of @Model.Inventory.PageCount</p>
			@Html.PagedListPager(Model.Inventory, page =>
		Url.Action("Manage", new { page, oldInventoryIsShown = Model.OldInventoryIsShown, currentFilter = ViewBag.CurrentFilter }))
}
else if (!String.IsNullOrEmpty(ViewBag.CurrentFilter))
{
	<p>No matching books were found.</p>
}

@section Scripts {
	<script type="text/javascript">
		$('#OldInventoryIsShown').click(function () {
			$(this).closest('form').submit();
		});
	</script>
}
